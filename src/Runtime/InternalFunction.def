/*
 * GenMC -- Generic Model Checking.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, you can access it online at
 * http://www.gnu.org/licenses/gpl-3.0.html.
 *
 * Author: Michalis Kokologiannakis <michalis@mpi-sws.org>
 */

/*** NOTE: No include guard ***/

#ifndef FIRST_PURE_FUNCTION
#define FIRST_PURE_FUNCTION(num)
#endif
#ifndef HANDLE_PURE_FUNCTION
#ifndef HANDLE_FUNCTION
#define HANDLE_PURE_FUNCTION(num, fun, name)
#else
#define HANDLE_PURE_FUNCTION(num, fun, name) HANDLE_FUNCTION(num, fun, name)
#endif
#endif
#ifndef LAST_PURE_FUNCTION
#define LAST_PURE_FUNCTION(num)
#endif

#ifndef FIRST_ASSUME_FUNCTION
#define FIRST_ASSUME_FUNCTION(num)
#endif
#ifndef HANDLE_ASSUME_FUNCTION
#ifndef HANDLE_PURE_FUNCTION
#define HANDLE_ASSUME_FUNCTION(num, fun, name)
#else
#define HANDLE_ASSUME_FUNCTION(num, fun, name) HANDLE_PURE_FUNCTION(num, fun, name)
#endif
#endif
#ifndef LAST_ASSUME_FUNCTION
#define LAST_ASSUME_FUNCTION(num)
#endif

#ifndef FIRST_MUTEX_FUNCTION
#define FIRST_MUTEX_FUNCTION(num)
#endif
#ifndef HANDLE_MUTEX_FUNCTION
#ifndef HANDLE_FUNCTION
#define HANDLE_MUTEX_FUNCTION(num, fun, name)
#else
#define HANDLE_MUTEX_FUNCTION(num, fun, name) HANDLE_FUNCTION(num, fun, name)
#endif
#endif
#ifndef LAST_MUTEX_FUNCTION
#define LAST_MUTEX_FUNCTION(num)
#endif

#ifndef FIRST_BARRIER_FUNCTION
#define FIRST_BARRIER_FUNCTION(num)
#endif
#ifndef HANDLE_BARRIER_FUNCTION
#ifndef HANDLE_FUNCTION
#define HANDLE_BARRIER_FUNCTION(num, fun, name)
#else
#define HANDLE_BARRIER_FUNCTION(num, fun, name) HANDLE_FUNCTION(num, fun, name)
#endif
#endif
#ifndef LAST_BARRIER_FUNCTION
#define LAST_BARRIER_FUNCTION(num)
#endif

#ifndef FIRST_CONDVAR_FUNCTION
#define FIRST_CONDVAR_FUNCTION(num)
#endif
#ifndef HANDLE_CONDVAR_FUNCTION
#ifndef HANDLE_FUNCTION
#define HANDLE_CONDVAR_FUNCTION(num, fun, name)
#else
#define HANDLE_CONDVAR_FUNCTION(num, fun, name) HANDLE_FUNCTION(num, fun, name)
#endif
#endif
#ifndef LAST_CONDVAR_FUNCTION
#define LAST_CONDVAR_FUNCTION(num)
#endif

#ifndef FIRST_ALLOC_FUNCTION
#define FIRST_ALLOC_FUNCTION(num)
#endif
#ifndef HANDLE_ALLOC_FUNCTION
#ifndef HANDLE_FUNCTION
#define HANDLE_ALLOC_FUNCTION(num, fun, name)
#else
#define HANDLE_ALLOC_FUNCTION(num, fun, name) HANDLE_FUNCTION(num, fun, name)
#endif
#endif
#ifndef LAST_ALLOC_FUNCTION
#define LAST_ALLOC_FUNCTION(num)
#endif

#ifndef FIRST_FREE_FUNCTION
#define FIRST_FREE_FUNCTION(num)
#endif
#ifndef HANDLE_FREE_FUNCTION
#ifndef HANDLE_FUNCTION
#define HANDLE_FREE_FUNCTION(num, fun, name)
#else
#define HANDLE_FREE_FUNCTION(num, fun, name) HANDLE_FUNCTION(num, fun, name)
#endif
#endif
#ifndef LAST_FREE_FUNCTION
#define LAST_FREE_FUNCTION(num)
#endif

#ifndef FIRST_OTHER_FUNCTION
#define FIRST_OTHER_FUNCTION(num)
#endif
#ifndef HANDLE_OTHER_FUNCTION
#ifndef HANDLE_FUNCTION
#define HANDLE_OTHER_FUNCTION(num, fun, name)
#else
#define HANDLE_OTHER_FUNCTION(num, fun, name) HANDLE_FUNCTION(num, fun, name)
#endif
#endif
#ifndef LAST_OTHER_FUNCTION
#define LAST_OTHER_FUNCTION(num)
#endif

/*
 * Pure functions - these have no (GenMC-) observable side effects.
 */
FIRST_PURE_FUNCTION(1)
HANDLE_PURE_FUNCTION(1, "__VERIFIER_assert_fail", AssertFail) // unique error fun
HANDLE_PURE_FUNCTION(2, "__VERIFIER_opt_begin", OptBegin)
HANDLE_PURE_FUNCTION(3, "__VERIFIER_loop_begin", LoopBegin)
HANDLE_PURE_FUNCTION(4, "__VERIFIER_spin_start", SpinStart)

FIRST_ASSUME_FUNCTION(5)
HANDLE_PURE_FUNCTION(5, "__VERIFIER_spin_end", SpinEnd)
HANDLE_PURE_FUNCTION(8, "__VERIFIER_assume", Assume)
LAST_ASSUME_FUNCTION(8)

HANDLE_PURE_FUNCTION(6, "__VERIFIER_faiZNE_spin_end", FaiZNESpinEnd)
HANDLE_PURE_FUNCTION(7, "__VERIFIER_lockZNE_spin_end", LockZNESpinEnd)
HANDLE_PURE_FUNCTION(9, "__VERIFIER_kill_thread", KillThread)
HANDLE_PURE_FUNCTION(10, "__VERIFIER_nondet_int", NondetInt)
HANDLE_PURE_FUNCTION(11, "__VERIFIER_thread_self", ThreadSelf)
HANDLE_PURE_FUNCTION(12, "__VERIFIER_annotate_begin", AnnotateBegin)
HANDLE_PURE_FUNCTION(13, "__VERIFIER_annotate_end", AnnotateEnd)
HANDLE_PURE_FUNCTION(14, "__VERIFIER_hazptr_protect", HazptrProtect)
HANDLE_PURE_FUNCTION(15, "__VERIFIER_hazptr_clear", HazptrClear)
HANDLE_PURE_FUNCTION(16, "__VERIFIER_method_begin", MethodBegin)
HANDLE_PURE_FUNCTION(17, "__VERIFIER_method_end", MethodEnd)
LAST_PURE_FUNCTION(17)

/*
 * Mutex functions - these denote some mutex operation.
 * Useful to distinguish for tracking dependencies.
 */
FIRST_MUTEX_FUNCTION(18)
HANDLE_MUTEX_FUNCTION(18, "__VERIFIER_mutex_init", MutexInit)
HANDLE_MUTEX_FUNCTION(19, "__VERIFIER_mutex_lock", MutexLock)
HANDLE_MUTEX_FUNCTION(20, "__VERIFIER_mutex_unlock", MutexUnlock)
HANDLE_MUTEX_FUNCTION(21, "__VERIFIER_mutex_trylock", MutexTrylock)
HANDLE_MUTEX_FUNCTION(22, "__VERIFIER_mutex_destroy", MutexDestroy)
LAST_MUTEX_FUNCTION(22)

/*
 * Barrier functions - for barrier operations
 */
FIRST_BARRIER_FUNCTION(23)
HANDLE_BARRIER_FUNCTION(23, "__VERIFIER_barrier_init", BarrierInit)
HANDLE_BARRIER_FUNCTION(24, "__VERIFIER_barrier_wait", BarrierWait)
HANDLE_BARRIER_FUNCTION(25, "__VERIFIER_barrier_destroy", BarrierDes)
LAST_BARRIER_FUNCTION(25)

/*
 * Condvar functions - for condition variables.
 */
FIRST_CONDVAR_FUNCTION(26)
HANDLE_CONDVAR_FUNCTION(26, "__VERIFIER_cond_init", CondVarInit)
HANDLE_CONDVAR_FUNCTION(27, "__VERIFIER_cond_wait", CondVarWait)
HANDLE_CONDVAR_FUNCTION(28, "__VERIFIER_cond_signal", CondVarSignal)
HANDLE_CONDVAR_FUNCTION(29, "__VERIFIER_cond_broadcast", CondVarBcast)
HANDLE_CONDVAR_FUNCTION(30, "__VERIFIER_cond_destroy", CondVarDestroy)
LAST_CONDVAR_FUNCTION(30)

/*
 * Alloc functions - for memory allocation.
 */
FIRST_ALLOC_FUNCTION(31)
HANDLE_ALLOC_FUNCTION(31, "__VERIFIER_malloc", Malloc)
HANDLE_ALLOC_FUNCTION(32, "__VERIFIER_malloc_aligned", MallocAligned)
HANDLE_ALLOC_FUNCTION(33, "__VERIFIER_palloc", PMalloc)
HANDLE_ALLOC_FUNCTION(34, "__VERIFIER_hazptr_alloc", HazptrAlloc)
LAST_ALLOC_FUNCTION(34)

/*
 * Free functions - for memory deallocation.
 */
FIRST_FREE_FUNCTION(35)
HANDLE_FREE_FUNCTION(35, "__VERIFIER_free", Free)
HANDLE_FREE_FUNCTION(36, "__VERIFIER_hazptr_free", HazptrFree)
HANDLE_FREE_FUNCTION(37, "__VERIFIER_hazptr_retire", HazptrRetire)
LAST_FREE_FUNCTION(37)

/*
 * Other functions - other function calls (w/ side effects)
 * that GenMC needs to track.
 */
FIRST_OTHER_FUNCTION(38)
HANDLE_OTHER_FUNCTION(38, "__VERIFIER_thread_create", ThreadCreate)
HANDLE_OTHER_FUNCTION(39, "__VERIFIER_thread_create_symmetric", ThreadCreateSymmetric)
HANDLE_OTHER_FUNCTION(40, "__VERIFIER_thread_join", ThreadJoin)
HANDLE_OTHER_FUNCTION(41, "__VERIFIER_thread_exit", ThreadExit)
HANDLE_OTHER_FUNCTION(42, "__VERIFIER_atexit", AtExit)
LAST_OTHER_FUNCTION(42)

#undef FIRST_PURE_FUNCTION
#undef HANDLE_PURE_FUNCTION
#undef LAST_PURE_FUNCTION

#undef FIRST_ASSUME_FUNCTION
#undef HANDLE_ASSUME_FUNCTION
#undef LAST_ASSUME_FUNCTION

#undef FIRST_MUTEX_FUNCTION
#undef HANDLE_MUTEX_FUNCTION
#undef LAST_MUTEX_FUNCTION

#undef FIRST_BARRIER_FUNCTION
#undef HANDLE_BARRIER_FUNCTION
#undef LAST_BARRIER_FUNCTION

#undef FIRST_CONDVAR_FUNCTION
#undef HANDLE_CONDVAR_FUNCTION
#undef LAST_CONDVAR_FUNCTION

#undef FIRST_ALLOC_FUNCTION
#undef HANDLE_ALLOC_FUNCTION
#undef LAST_ALLOC_FUNCTION

#undef FIRST_FREE_FUNCTION
#undef HANDLE_FREE_FUNCTION
#undef LAST_FREE_FUNCTION

#undef FIRST_OTHER_FUNCTION
#undef HANDLE_OTHER_FUNCTION
#undef LAST_OTHER_FUNCTION

#ifdef HANDLE_FUNCTION
#undef HANDLE_FUNCTION
#endif
