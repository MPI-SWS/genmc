Error detected: Safety violation!
Event (1, 4) in graph:
<-1, 0> main:
	(0, 0): B
	(0, 1): TC [forks 1] L.12
	(0, 2): TC [forks 2] L.14
	(0, 3): E
<0, 1> thread_one:
	(1, 0): B
	(1, 1): Wrlx (y, 1) L.7: dekker_rlx.c
	(1, 2): Rrlx (x, 0) [INIT] L.8: dekker_rlx.c
	(1, 3): Wrlx (c, 1) L.9: dekker_rlx.c
	(1, 4): Rrlx (c, 0) [(2, 3)] L.10: dekker_rlx.c
<0, 2> thread_two:
	(2, 0): B
	(2, 1): Wrlx (x, 1) L.17: dekker_rlx.c
	(2, 2): Rrlx (y, 0) [INIT] L.18: dekker_rlx.c
	(2, 3): Wrlx (c, 0) L.19: dekker_rlx.c

Trace to (1, 4):
[main] dekker_rlx0.c: 12: if (pthread_create(&t1, NULL, thread_one, NULL))
[thread_one] dekker_rlx.c: 7: atomic_store_explicit(&y, 1, memory_order_relaxed);
[thread_one] dekker_rlx.c: 8: if (!atomic_load_explicit(&x, memory_order_relaxed)) {
[thread_one] dekker_rlx.c: 9: atomic_store_explicit(&c, 1, memory_order_relaxed);
[main] dekker_rlx0.c: 12: if (pthread_create(&t1, NULL, thread_one, NULL))
[thread_two] dekker_rlx.c: 17: atomic_store_explicit(&x, 1, memory_order_relaxed);
[thread_two] dekker_rlx.c: 18: if (!atomic_load_explicit(&y, memory_order_relaxed)) {
[thread_two] dekker_rlx.c: 19: atomic_store_explicit(&c, 0, memory_order_relaxed);
[thread_one] dekker_rlx.c: 10: assert(atomic_load_explicit(&c, memory_order_relaxed) == 1);
Assertion violation: atomic_load_explicit(&c, memory_order_relaxed) == 1
Number of complete executions explored: 4
Number of blocked executions seen: 1
